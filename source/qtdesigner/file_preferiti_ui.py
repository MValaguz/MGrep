# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'file_preferiti_ui.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_file_preferiti_window(object):
    def setupUi(self, file_preferiti_window):
        file_preferiti_window.setObjectName("file_preferiti_window")
        file_preferiti_window.resize(801, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/MGrep.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        file_preferiti_window.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(file_preferiti_window)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.o_lst1 = QtWidgets.QListView(self.centralwidget)
        self.o_lst1.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.o_lst1.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.o_lst1.setObjectName("o_lst1")
        self.gridLayout.addWidget(self.o_lst1, 0, 0, 1, 1)
        file_preferiti_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(file_preferiti_window)
        self.statusbar.setObjectName("statusbar")
        file_preferiti_window.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(file_preferiti_window)
        self.toolBar.setIconSize(QtCore.QSize(25, 25))
        self.toolBar.setObjectName("toolBar")
        file_preferiti_window.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(file_preferiti_window)
        self.toolBar_2.setIconSize(QtCore.QSize(25, 25))
        self.toolBar_2.setObjectName("toolBar_2")
        file_preferiti_window.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.actionRefresh = QtWidgets.QAction(file_preferiti_window)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/icons/refresh.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRefresh.setIcon(icon1)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionList_actions = QtWidgets.QAction(file_preferiti_window)
        self.actionList_actions.setEnabled(False)
        self.actionList_actions.setObjectName("actionList_actions")
        self.actionItem_action = QtWidgets.QAction(file_preferiti_window)
        self.actionItem_action.setEnabled(False)
        self.actionItem_action.setObjectName("actionItem_action")
        self.actionInsert_line = QtWidgets.QAction(file_preferiti_window)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/line.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsert_line.setIcon(icon2)
        self.actionInsert_line.setObjectName("actionInsert_line")
        self.actionUp = QtWidgets.QAction(file_preferiti_window)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/icons/up.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUp.setIcon(icon3)
        self.actionUp.setObjectName("actionUp")
        self.actionDown = QtWidgets.QAction(file_preferiti_window)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/icons/down.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDown.setIcon(icon4)
        self.actionDown.setObjectName("actionDown")
        self.actionDelete_line = QtWidgets.QAction(file_preferiti_window)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/icons/delete.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_line.setIcon(icon5)
        self.actionDelete_line.setObjectName("actionDelete_line")
        self.actionClear = QtWidgets.QAction(file_preferiti_window)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/icons/clear.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear.setIcon(icon6)
        self.actionClear.setObjectName("actionClear")
        self.actionSave = QtWidgets.QAction(file_preferiti_window)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/icons/disk.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon7)
        self.actionSave.setObjectName("actionSave")
        self.actionOpen_forlder = QtWidgets.QAction(file_preferiti_window)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/icons/folder.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_forlder.setIcon(icon8)
        self.actionOpen_forlder.setObjectName("actionOpen_forlder")
        self.actionZip = QtWidgets.QAction(file_preferiti_window)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/icons/zip.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZip.setIcon(icon9)
        self.actionZip.setObjectName("actionZip")
        self.actionPublish_smile = QtWidgets.QAction(file_preferiti_window)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/icons/upload1.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPublish_smile.setIcon(icon10)
        self.actionPublish_smile.setObjectName("actionPublish_smile")
        self.actionPublish_ICOM = QtWidgets.QAction(file_preferiti_window)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/icons/icom.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPublish_ICOM.setIcon(icon11)
        self.actionPublish_ICOM.setObjectName("actionPublish_ICOM")
        self.actionCompile_ICOM_BCK1 = QtWidgets.QAction(file_preferiti_window)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/icons/icom_backup.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompile_ICOM_BCK1.setIcon(icon12)
        self.actionCompile_ICOM_BCK1.setObjectName("actionCompile_ICOM_BCK1")
        self.actionCompile_ICOM_BCK2 = QtWidgets.QAction(file_preferiti_window)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/icons/icom_backup_2.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompile_ICOM_BCK2.setIcon(icon13)
        self.actionCompile_ICOM_BCK2.setObjectName("actionCompile_ICOM_BCK2")
        self.actionCompile_SMILE_BCK1 = QtWidgets.QAction(file_preferiti_window)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/icons/smile_backup.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompile_SMILE_BCK1.setIcon(icon14)
        self.actionCompile_SMILE_BCK1.setObjectName("actionCompile_SMILE_BCK1")
        self.actionCompile_SMILE_BCK2 = QtWidgets.QAction(file_preferiti_window)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/icons/smile_backup_2.gif"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompile_SMILE_BCK2.setIcon(icon15)
        self.actionCompile_SMILE_BCK2.setObjectName("actionCompile_SMILE_BCK2")
        self.toolBar.addAction(self.actionList_actions)
        self.toolBar.addAction(self.actionRefresh)
        self.toolBar.addAction(self.actionInsert_line)
        self.toolBar.addAction(self.actionUp)
        self.toolBar.addAction(self.actionDown)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionDelete_line)
        self.toolBar.addAction(self.actionClear)
        self.toolBar.addAction(self.actionSave)
        self.toolBar_2.addAction(self.actionItem_action)
        self.toolBar_2.addAction(self.actionOpen_forlder)
        self.toolBar_2.addAction(self.actionZip)
        self.toolBar_2.addSeparator()
        self.toolBar_2.addAction(self.actionPublish_smile)
        self.toolBar_2.addAction(self.actionPublish_ICOM)
        self.toolBar_2.addSeparator()
        self.toolBar_2.addAction(self.actionCompile_ICOM_BCK1)
        self.toolBar_2.addAction(self.actionCompile_ICOM_BCK2)
        self.toolBar_2.addAction(self.actionCompile_SMILE_BCK1)
        self.toolBar_2.addAction(self.actionCompile_SMILE_BCK2)

        self.retranslateUi(file_preferiti_window)
        self.actionRefresh.triggered.connect(file_preferiti_window.slot_refresh)
        self.actionCompile_ICOM_BCK2.triggered.connect(file_preferiti_window.slot_compile_icom_backup2)
        self.actionCompile_ICOM_BCK1.triggered.connect(file_preferiti_window.slot_compile_icom_backup1)
        self.actionCompile_SMILE_BCK1.triggered.connect(file_preferiti_window.slot_compile_smile_backup1)
        self.actionCompile_SMILE_BCK2.triggered.connect(file_preferiti_window.slot_compile_smile_backup2)
        self.actionDelete_line.triggered.connect(file_preferiti_window.slot_delete_line)
        self.actionDown.triggered.connect(file_preferiti_window.slot_sposta_giu)
        self.actionUp.triggered.connect(file_preferiti_window.slot_sposta_su)
        self.actionOpen_forlder.triggered.connect(file_preferiti_window.slot_open_folder)
        self.actionSave.triggered.connect(file_preferiti_window.slot_save)
        self.actionInsert_line.triggered.connect(file_preferiti_window.slot_insert_line)
        self.actionClear.triggered.connect(file_preferiti_window.slot_clear)
        self.actionZip.triggered.connect(file_preferiti_window.slot_backup_line)
        self.actionPublish_smile.triggered.connect(file_preferiti_window.slot_pubblica_smile)
        self.actionPublish_ICOM.triggered.connect(file_preferiti_window.slot_pubblica_icom)
        self.o_lst1.doubleClicked['QModelIndex'].connect(file_preferiti_window.slot_doppio_click_lista)
        QtCore.QMetaObject.connectSlotsByName(file_preferiti_window)

    def retranslateUi(self, file_preferiti_window):
        _translate = QtCore.QCoreApplication.translate
        file_preferiti_window.setWindowTitle(_translate("file_preferiti_window", "My favorites files"))
        self.toolBar.setWindowTitle(_translate("file_preferiti_window", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("file_preferiti_window", "toolBar_2"))
        self.actionRefresh.setText(_translate("file_preferiti_window", "Refresh"))
        self.actionRefresh.setToolTip(_translate("file_preferiti_window", "Reload the list"))
        self.actionList_actions.setText(_translate("file_preferiti_window", "List actions:"))
        self.actionItem_action.setText(_translate("file_preferiti_window", "Item action:"))
        self.actionInsert_line.setText(_translate("file_preferiti_window", "Insert line"))
        self.actionInsert_line.setToolTip(_translate("file_preferiti_window", "Insert an empty line into the list"))
        self.actionUp.setText(_translate("file_preferiti_window", "Up"))
        self.actionUp.setToolTip(_translate("file_preferiti_window", "Shift up the selected line"))
        self.actionDown.setText(_translate("file_preferiti_window", "Down"))
        self.actionDown.setToolTip(_translate("file_preferiti_window", "Shift down the selected line"))
        self.actionDelete_line.setText(_translate("file_preferiti_window", "Delete line"))
        self.actionDelete_line.setToolTip(_translate("file_preferiti_window", "Delete the selected line"))
        self.actionClear.setText(_translate("file_preferiti_window", "Clear"))
        self.actionClear.setToolTip(_translate("file_preferiti_window", "Clear the list"))
        self.actionSave.setText(_translate("file_preferiti_window", "Save"))
        self.actionSave.setToolTip(_translate("file_preferiti_window", "Save the list"))
        self.actionOpen_forlder.setText(_translate("file_preferiti_window", "Open forlder"))
        self.actionOpen_forlder.setToolTip(_translate("file_preferiti_window", "Open the directory of the selected line"))
        self.actionZip.setText(_translate("file_preferiti_window", "Zip"))
        self.actionZip.setToolTip(_translate("file_preferiti_window", "It takes the source and copies it into the zip file named Old in the same folder and same file"))
        self.actionPublish_smile.setText(_translate("file_preferiti_window", "Publish smile"))
        self.actionPublish_smile.setToolTip(_translate("file_preferiti_window", "Publish source of Oracle Form or Report Form on real servers (compiling as SMILE user)"))
        self.actionPublish_ICOM.setText(_translate("file_preferiti_window", "Publish ICOM"))
        self.actionPublish_ICOM.setToolTip(_translate("file_preferiti_window", "Publish source of Oracle Form or Report Form on real servers (compiling as ICOM user)"))
        self.actionCompile_ICOM_BCK1.setText(_translate("file_preferiti_window", "Compile ICOM BCK1"))
        self.actionCompile_ICOM_BCK1.setToolTip(_translate("file_preferiti_window", "Compile form as ICOM into BACKUP1"))
        self.actionCompile_ICOM_BCK2.setText(_translate("file_preferiti_window", "Compile ICOM BCK2"))
        self.actionCompile_ICOM_BCK2.setToolTip(_translate("file_preferiti_window", "Compile form as ICOM user into BACKUP2"))
        self.actionCompile_SMILE_BCK1.setText(_translate("file_preferiti_window", "Compile SMILE BCK1"))
        self.actionCompile_SMILE_BCK1.setToolTip(_translate("file_preferiti_window", "Compile form as SMILE user into BACKUP1"))
        self.actionCompile_SMILE_BCK2.setText(_translate("file_preferiti_window", "Compile SMILE BCK2"))
        self.actionCompile_SMILE_BCK2.setToolTip(_translate("file_preferiti_window", "Compile form as SMILE user into BACKUP2"))

import resource_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    file_preferiti_window = QtWidgets.QMainWindow()
    ui = Ui_file_preferiti_window()
    ui.setupUi(file_preferiti_window)
    file_preferiti_window.show()
    sys.exit(app.exec_())

